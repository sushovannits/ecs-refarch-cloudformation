Description:
  This template deploys a Network Load Balancer that acts as a front-end to the Ingest service.
  It also deploys a long-running service that launches ingest nodes listening for ICE requests.

Parameters:
  ImageUrl:
    Description: ECR URL
    Type: String
    AllowedPattern: "^[0-9]*\.dkr\.ecr\.[a-z\-0-9]*\.amazonaws.com\/.*"
  Cluster:
    Description: Please provide the ECS Cluster ID that this service should run on
    Type: String

  DesiredCount:
    Description: How many instances of this task should we run across our cluster?
    Type: Number
    Default: 1

  # 4061TargetGroupArn:
  #   Description: The target group Arn for NLB
  #   Type: String

  # 4064TargetGroupArn:
  #   Description: The target group Arn for NLB
  #   Type: String

  80TargetGroupArn:
    Description: The target group Arn for NLB
    Type: String

Resources:
  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      Role: !Ref ServiceRole
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        # - ContainerName: "ingest-service"
        #   ContainerPort: 4061
        #   TargetGroupArn: !Ref 4061TargetGroupArn
        # - ContainerName: "ingest-service"
        #   ContainerPort: 4064
        #   TargetGroupArn: !Ref 4064TargetGroupArn
        - ContainerName: "ingest-service"
          ContainerPort: 80 
          TargetGroupArn: !Ref 80TargetGroupArn

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: ingest-service
      NetworkMode: bridge
      ContainerDefinitions:
        - Name: ingest-service
          Essential: true
          Image: !Ref ImageUrl
          Memory: 1024
          PortMappings:
            # - ContainerPort: 4061
            #   HostPort: 4061
            - ContainerPort: 80
              HostPort: 80
            # - ContainerPort: 4064
            #   HostPort: 4064
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogsGroup
              awslogs-region: !Ref AWS::Region

  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 365

  # This IAM Role grants the service access to register/unregister with the
  # Application Load Balancer (ALB). It is based on the default documented here:
  # http://docs.aws.amazon.com/AmazonECS/latest/developerguide/service_IAM_role.html
  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ecs-service-${AWS::StackName}
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "ecs.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: !Sub ecs-service-${AWS::StackName}
          PolicyDocument:
            {
              "Version": "2012-10-17",
              "Statement":
                [
                  {
                    "Effect": "Allow",
                    "Action":
                      [
                        "ec2:AuthorizeSecurityGroupIngress",
                        "ec2:Describe*",
                        "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                        "elasticloadbalancing:Describe*",
                        "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                        "elasticloadbalancing:DeregisterTargets",
                        "elasticloadbalancing:DescribeTargetGroups",
                        "elasticloadbalancing:DescribeTargetHealth",
                        "elasticloadbalancing:RegisterTargets"
                      ],
                    "Resource": "*"
                  }
                ]
            }
